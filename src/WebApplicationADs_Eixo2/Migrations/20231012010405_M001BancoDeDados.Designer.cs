// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationADs_Eixo2.Models;

#nullable disable

namespace WebApplicationADs_Eixo2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231012010405_M001BancoDeDados")]
    partial class M001BancoDeDados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CalendarioIdCalendarioID")
                        .HasColumnType("int");

                    b.Property<int>("Colaborador")
                        .HasColumnType("int");

                    b.Property<int>("Deficiente")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCalendario")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioDeficienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalendarioIdCalendarioID");

                    b.HasIndex("UsuarioColaboradorId");

                    b.HasIndex("UsuarioDeficienteId");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Amigos", b =>
                {
                    b.Property<int>("Usuario1")
                        .HasColumnType("int");

                    b.Property<int>("Usuario2")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAmizade")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioUsuario1Id")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioUsuario2Id")
                        .HasColumnType("int");

                    b.HasKey("Usuario1", "Usuario2");

                    b.HasIndex("UsuarioUsuario1Id");

                    b.HasIndex("UsuarioUsuario2Id");

                    b.ToTable("Amigos");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.AvaliacaoAgendamento", b =>
                {
                    b.Property<int>("IdAgendamento")
                        .HasColumnType("int");

                    b.Property<int>("Avaliador")
                        .HasColumnType("int");

                    b.Property<int>("AgendamentoIdAgendamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioAvaliadorId")
                        .HasColumnType("int");

                    b.HasKey("IdAgendamento", "Avaliador");

                    b.HasIndex("AgendamentoIdAgendamentoId");

                    b.HasIndex("UsuarioAvaliadorId");

                    b.ToTable("AvaliacaoAgendamento");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Calendario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<int>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioidUserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioidUserId");

                    b.ToTable("Calendario");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.DadosUsuarios", b =>
                {
                    b.Property<int>("IDUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDUser"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNacimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdDeficiencia")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SobreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDUser");                   

                    b.ToTable("DadosUsuarios");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Deficiencia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Deficiencia");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.MensagensPrivadas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDestinatario")
                        .HasColumnType("int");

                    b.Property<int>("IdRemetente")
                        .HasColumnType("int");

                    b.Property<string>("TextoMensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioDestinatarioId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioRemetenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioDestinatarioId");

                    b.HasIndex("UsuarioRemetenteId");

                    b.ToTable("MensagensPrivadas");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Notificacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDestinatario")
                        .HasColumnType("int");

                    b.Property<string>("TextoMensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioDestinatarioId")
                        .HasColumnType("int");

                    b.Property<bool>("lido")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioDestinatarioId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Perfil", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Administrador")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("Colaborador")
                        .HasColumnType("bit");

                    b.Property<bool>("Deficiente")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Preferencias", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Preferencias");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerfilIdPerfilID")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Agendamento", b =>
                {
                    b.HasOne("WebApplicationADs_Eixo2.Models.Calendario", "CalendarioIdCalendario")
                        .WithMany()
                        .HasForeignKey("CalendarioIdCalendarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioColaborador")
                        .WithMany()
                        .HasForeignKey("UsuarioColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioDeficiente")
                        .WithMany()
                        .HasForeignKey("UsuarioDeficienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalendarioIdCalendario");

                    b.Navigation("UsuarioColaborador");

                    b.Navigation("UsuarioDeficiente");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Amigos", b =>
                {
                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioUsuario1")
                        .WithMany()
                        .HasForeignKey("UsuarioUsuario1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioUsuario2")
                        .WithMany()
                        .HasForeignKey("UsuarioUsuario2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioUsuario1");

                    b.Navigation("UsuarioUsuario2");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.AvaliacaoAgendamento", b =>
                {
                    b.HasOne("WebApplicationADs_Eixo2.Models.Agendamento", "AgendamentoIdAgendamento")
                        .WithMany()
                        .HasForeignKey("AgendamentoIdAgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioAvaliador")
                        .WithMany()
                        .HasForeignKey("UsuarioAvaliadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgendamentoIdAgendamento");

                    b.Navigation("UsuarioAvaliador");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Calendario", b =>
                {
                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioidUser")
                        .WithMany()
                        .HasForeignKey("UsuarioidUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioidUser");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.DadosUsuarios", b =>
                {
                    b.HasOne("WebApplicationADs_Eixo2.Models.Deficiencia", "DeficienciaIdDeficiencia")
                        .WithMany()
                        .HasForeignKey("IdDeficiencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioIDUser")
                        .WithMany()
                        .HasForeignKey("UsuarioIDUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeficienciaIdDeficiencia");

                    b.Navigation("UsuarioIDUser");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.MensagensPrivadas", b =>
                {
                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioDestinatario")
                        .WithMany()
                        .HasForeignKey("UsuarioDestinatarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioRemetente")
                        .WithMany()
                        .HasForeignKey("UsuarioRemetenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioDestinatario");

                    b.Navigation("UsuarioRemetente");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Notificacoes", b =>
                {
                    b.HasOne("WebApplicationADs_Eixo2.Models.Usuarios", "UsuarioDestinatario")
                        .WithMany()
                        .HasForeignKey("UsuarioDestinatarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioDestinatario");
                });

            modelBuilder.Entity("WebApplicationADs_Eixo2.Models.Usuarios", b =>
                {
                    b.HasOne("WebApplicationADs_Eixo2.Models.Deficiencia", "DeficienciaIdDeficiencia")
                        .WithMany()
                        .HasForeignKey("IdDeficiencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationADs_Eixo2.Models.Perfil", "PerfilIdPerfil")
                        .WithMany()
                        .HasForeignKey("PerfilIdPerfilID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeficienciaIdDeficiencia");

                    b.Navigation("PerfilIdPerfil");
                });
#pragma warning restore 612, 618
        }
    }
}
